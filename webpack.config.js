//@ts-check

"use strict";

const path = require("path");
const TerserPlugin = require("terser-webpack-plugin"); // D√πng ƒë·ªÉ gi·∫£m k√≠ch th∆∞·ªõc file build
const { CleanWebpackPlugin } = require("clean-webpack-plugin"); // D·ªçn s·∫°ch th∆∞ m·ª•c dist tr∆∞·ªõc khi build
const nodeExternals = require("webpack-node-externals"); // T·ª± ƒë·ªông lo·∫°i tr·ª´ t·∫•t c·∫£ c√°c m√¥-ƒëun node_modules

//@ts-check
/** @typedef {import('webpack').Configuration} WebpackConfig **/

/** @type WebpackConfig */
const extensionConfig = {
  target: "node", // VS Code extensions run in a Node.js-context üìñ -> https://webpack.js.org/configuration/node/
  mode: "none", // T·ªëi ∆∞u h√≥a m√£ ngu·ªìn khi build
  entry: "./src/extension.ts", // Entry point c·ªßa extension
  output: {
    path: path.resolve(__dirname, "dist"), // Th∆∞ m·ª•c ƒë·∫ßu ra
    filename: "extension.js", // T√™n t·ªáp ƒë√£ build
    libraryTarget: "commonjs2", // S·ª≠ d·ª•ng cho c√°c m√¥-ƒëun Node.js
  },
  externals: [
    { vscode: "commonjs vscode" }, // Ch·ªâ ƒë·ªãnh r·∫±ng `vscode` l√† m√¥-ƒëun external
    nodeExternals(),
  ],
  resolve: {
    extensions: [".ts", ".js"], // H·ªó tr·ª£ c√°c t·ªáp TypeScript v√† JavaScript
  },
  module: {
    rules: [
      {
        test: /\.ts$/,
        exclude: /node_modules/,
        use: [
          {
            loader: "ts-loader",
            options: {
              transpileOnly: true, // Gi·∫£m th·ªùi gian build
            },
          },
        ],
      },
    ],
  },
  optimization: {
    minimize: true, // Thu nh·ªè t·ªáp b·∫±ng Terser
    minimizer: [
      new TerserPlugin({
        extractComments: false, // Kh√¥ng t·∫°o file .LICENSE.txt
        terserOptions: {
          compress: {
            drop_console: true, // Lo·∫°i b·ªè console.log
            drop_debugger: true, // Lo·∫°i b·ªè debugger
          },
        },
      }),
    ],
  },
  plugins: [
    new CleanWebpackPlugin(), // X√≥a th∆∞ m·ª•c dist tr∆∞·ªõc khi build
  ],
  infrastructureLogging: {
    level: "warn", // Hi·ªÉn th·ªã c·∫£nh b√°o trong console
  },
  stats: "errors-only", // Ch·ªâ hi·ªÉn th·ªã l·ªói trong qu√° tr√¨nh build
};

module.exports = [extensionConfig];
